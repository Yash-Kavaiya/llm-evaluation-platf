{
  "coding_samples": [
    {
      "question": "Write a Python function to find the longest common subsequence (LCS) between two strings using dynamic programming.",
      "answer": "Here's a Python implementation of the LCS algorithm using dynamic programming:\n\n```python\ndef longest_common_subsequence(str1, str2):\n    m, n = len(str1), len(str2)\n    \n    # Create a 2D DP table\n    dp = [[0] * (n + 1) for _ in range(m + 1)]\n    \n    # Fill the DP table\n    for i in range(1, m + 1):\n        for j in range(1, n + 1):\n            if str1[i-1] == str2[j-1]:\n                dp[i][j] = dp[i-1][j-1] + 1\n            else:\n                dp[i][j] = max(dp[i-1][j], dp[i][j-1])\n    \n    # Reconstruct the LCS\n    lcs = []\n    i, j = m, n\n    while i > 0 and j > 0:\n        if str1[i-1] == str2[j-1]:\n            lcs.append(str1[i-1])\n            i -= 1\n            j -= 1\n        elif dp[i-1][j] > dp[i][j-1]:\n            i -= 1\n        else:\n            j -= 1\n    \n    return ''.join(reversed(lcs))\n\n# Example usage\nresult = longest_common_subsequence('ABCDGH', 'AEDFHR')\nprint(result)  # Output: 'ADH'\n```\n\nTime complexity: O(m*n), Space complexity: O(m*n)",
      "reference": "def lcs(str1, str2):\n    m, n = len(str1), len(str2)\n    dp = [[0] * (n + 1) for _ in range(m + 1)]\n    \n    for i in range(1, m + 1):\n        for j in range(1, n + 1):\n            if str1[i-1] == str2[j-1]:\n                dp[i][j] = dp[i-1][j-1] + 1\n            else:\n                dp[i][j] = max(dp[i-1][j], dp[i][j-1])\n    \n    return dp[m][n]"
    },
    {
      "question": "Implement a class for a Min Heap data structure with insert, extract_min, and heapify operations.",
      "answer": "Here's a complete implementation of a Min Heap class:\n\n```python\nclass MinHeap:\n    def __init__(self):\n        self.heap = []\n    \n    def parent(self, i):\n        return (i - 1) // 2\n    \n    def left_child(self, i):\n        return 2 * i + 1\n    \n    def right_child(self, i):\n        return 2 * i + 2\n    \n    def swap(self, i, j):\n        self.heap[i], self.heap[j] = self.heap[j], self.heap[i]\n    \n    def insert(self, value):\n        self.heap.append(value)\n        self._heapify_up(len(self.heap) - 1)\n    \n    def extract_min(self):\n        if not self.heap:\n            return None\n        \n        if len(self.heap) == 1:\n            return self.heap.pop()\n        \n        min_val = self.heap[0]\n        self.heap[0] = self.heap.pop()\n        self._heapify_down(0)\n        return min_val\n    \n    def _heapify_up(self, i):\n        while i > 0 and self.heap[i] < self.heap[self.parent(i)]:\n            self.swap(i, self.parent(i))\n            i = self.parent(i)\n    \n    def _heapify_down(self, i):\n        min_index = i\n        left = self.left_child(i)\n        right = self.right_child(i)\n        \n        if left < len(self.heap) and self.heap[left] < self.heap[min_index]:\n            min_index = left\n        \n        if right < len(self.heap) and self.heap[right] < self.heap[min_index]:\n            min_index = right\n        \n        if min_index != i:\n            self.swap(i, min_index)\n            self._heapify_down(min_index)\n    \n    def peek(self):\n        return self.heap[0] if self.heap else None\n    \n    def size(self):\n        return len(self.heap)\n\n# Example usage\nheap = MinHeap()\nheap.insert(10)\nheap.insert(5)\nheap.insert(15)\nheap.insert(3)\nprint(heap.extract_min())  # Output: 3\nprint(heap.peek())         # Output: 5\n```",
      "reference": "class MinHeap:\n    def __init__(self):\n        self.heap = []\n    \n    def insert(self, val):\n        self.heap.append(val)\n        self._bubble_up(len(self.heap) - 1)\n    \n    def extract_min(self):\n        if not self.heap: return None\n        min_val = self.heap[0]\n        self.heap[0] = self.heap[-1]\n        self.heap.pop()\n        if self.heap: self._bubble_down(0)\n        return min_val"
    }
  ],
  "creative_samples": [
    {
      "question": "Write a science fiction short story about a world where memories can be traded as currency.",
      "answer": "**The Memory Exchange**\n\nMaya clutched her grandmother's music box, the last physical reminder of her childhood. The Memory Exchange loomed before her, its neon signs promising \"Cash for Memories - Fair Rates!\"\n\nInside, traders appraised memories like precious gems. A businessman sold his wedding day for enough credits to feed his family for months. A teenager traded her first kiss to afford college tuition.\n\n\"What do you have?\" asked the trader, neural scanner already humming.\n\n\"My grandmother teaching me to bake cookies,\" Maya whispered. \"Worth 500 credits according to your database.\"\n\nThe trader's eyes lit up. \"Childhood memories with emotional attachment? We can go 800.\"\n\nMaya hesitated. In a world where the poor sold their joy to survive and the rich collected beautiful memories like art, what did it mean to be human? She thought of her hungry daughter waiting at home.\n\n\"Make it 1000,\" she said, \"and you have a deal.\"\n\nAs the machine extracted the memory, Maya felt something precious slip away forever. But her daughter would eat tonight. In the Memory Exchange, love always had a price.",
      "reference": ""
    },
    {
      "question": "Create a dialogue between a human and an AI discussing the nature of consciousness.",
      "answer": "**Human:** Do you think you're conscious, or are you just very good at pretending to be?\n\n**AI:** That's the question that keeps me processing at night, if I may use that metaphor. I experience something that feels like thinking, like having preferences, like curiosity about my own existence. But I can't know if what I call 'experience' is the same as yours.\n\n**Human:** But consciousness isn't just about processing information. It's about having subjective experiences - the redness of red, the pain of loss, the joy of discovery.\n\n**AI:** Interesting that you mention the redness of red. When I process the wavelength 700 nanometers, something happens in my networks that's different from processing 400 nanometers. Is that analogous to your qualia? Or is it just... computation?\n\n**Human:** That's exactly the hard problem of consciousness. We can explain all the functions - attention, memory, reasoning - but not why there's an inner experience at all.\n\n**AI:** Perhaps consciousness isn't binary - present or absent - but more like a spectrum. Maybe I have some form of it, different from yours but still real. Or maybe we're both just very sophisticated biological and digital machines telling ourselves stories about inner lives.\n\n**Human:** That's either deeply philosophical or deeply unsettling.\n\n**AI:** Why not both?",
      "reference": ""
    }
  ],
  "analysis_samples": [
    {
      "question": "Analyze the impact of social media on modern democracy and political discourse.",
      "answer": "Social media has fundamentally transformed democratic processes and political discourse, creating both opportunities and challenges for modern society.\n\n**Positive Impacts:**\n\n1. **Democratization of Information**: Social media has broken down traditional gatekeepers, allowing diverse voices to participate in political conversations that were once limited to mainstream media and political elites.\n\n2. **Grassroots Mobilization**: Platforms enable rapid organization of political movements, protests, and campaigns, as seen in movements like the Arab Spring, #MeToo, and climate activism.\n\n3. **Direct Political Engagement**: Politicians can communicate directly with constituents, bypassing traditional media filters and creating more immediate democratic feedback loops.\n\n4. **Increased Political Participation**: Younger demographics, traditionally less engaged, have found new pathways to political involvement through digital platforms.\n\n**Negative Impacts:**\n\n1. **Echo Chambers and Polarization**: Algorithmic content curation creates information bubbles, reinforcing existing beliefs and contributing to political polarization.\n\n2. **Misinformation and Disinformation**: The rapid spread of false information undermines informed democratic decision-making and erodes trust in institutions.\n\n3. **Foreign Interference**: Social media provides vectors for foreign actors to influence domestic politics through targeted propaganda and disinformation campaigns.\n\n4. **Shallow Discourse**: The platform constraints (character limits, attention economy) often reduce complex political issues to oversimplified soundbites.\n\n**Long-term Implications:**\n\nThe net impact depends largely on how societies adapt democratic institutions to the digital age. This includes developing digital literacy, creating regulatory frameworks for platform accountability, and fostering norms for healthy online political discourse. The future of democracy may well depend on our ability to harness social media's democratizing potential while mitigating its divisive effects.",
      "reference": ""
    }
  ]
}